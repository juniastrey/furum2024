{
  "name": "Example: Smooth Speed Slider",
  "id": "X4YXezC9QS2nGNt5W",
  "sources": {
    "main": "/*\nThis pattern is based on the default scrolling rainbow and has a slider to control speed.\nIt uses an accumulation based on delta instead of time() so that changes in speed do not cause the animation to jump.\nThe downsides is slightly more code, and this pattern won't be synchronized with other Pixelblazes through firestorm.\n*/\n\nvar speedRange = 1/1000 // this scales the milliseconds back to a usable range. shown here, the max rate is 1Hz\nvar speed = speedRange // controlled by slider\n\nexport function sliderSpeed(s) {\n  speed = s*s * speedRange // square it to give better control at lower values, then scale it\n}\n\nvar t1\nexport function beforeRender(delta) {\n  t1 = (t1 + delta * speed) % 1 // accumulate time in t1, and wrap it using modulus math to keep it between 0-1\n}\n\nexport function render(index) {\n  h = t1 + index/pixelCount\n  s = 1\n  v = 1\n  hsv(h, s, v)\n}"
  },
  "preview": "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"
}